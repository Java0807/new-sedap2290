// import React from "react";
// import styles from "@/styles/order.module.css";
// import orderListData from "@/data";
// import { useRouter } from "next/router";
// import Head from "next/head";
// export default function Table() {
//   const columns = [
//     {
//       id: "0",
//       name: "Order ID",
//     },
//     {
//       id: "1",
//       name: "Date",
//     },
//     {
//       id: "2",
//       name: "Customer Name",
//     },
//     {
//       id: "3",
//       name: "Location",
//     },
//     {
//       id: "4",
//       name: "Amount",
//     },
//     {
//       id: "5",
//       name: "Status Order",
//     },
//   ];

//   return (
//     <>
//       <Head>
//         <title>Orders </title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <table className={styles["table"]}>
//         <thead>
//           <tr className={styles["tr"]}>
//             {columns.map((col) => (
//               <TableHead key={col.id} name={col.name} />
//             ))}
//           </tr>
//         </thead>
//         <tbody>
//           <tr className={styles.forSpace}></tr>
//           {orderListData.map((item) => (
//             <TableRow key={item.userId} item={item} />
//           ))}
//         </tbody>
//       </table>
//     </>
//   );
// }

// function TableHead({ name }) {
//   return (
//     <th className={styles["th"]}>
//       <div>
//         <p>{name}</p>
//       </div>
//     </th>
//   );
// }

// function TableRow(props) {
//   const { item } = props;
//   const router = useRouter();
//   function goToDetails(orderId) {
//     orderListData.map((item) => {
//       if (item.userId == orderId) {
//         localStorage.setItem("orders", JSON.stringify(item));
//       }
//     });
//     router.push(`/orders/${orderId}`);
//   }

//   return (
//     <tr
//       className={styles["tr"]}
//       style={{ cursor: "pointer" }}
//       onClick={() => goToDetails(item.userId)}
//     >
//       <td className={styles["td"]}>#{item.userId}</td>
//       <td className={styles["td"]}>{item.date}</td>
//       <td className={styles["td"]}>{item.userName}</td>
//       <td className={styles["td"]}>{item.location}</td>
//       <td className={styles["td"]}>${item.amount}</td>
//       <td className={styles["td"]}>
//         {item.status === "On Delivery" ? (
//           <div className={styles["onDelivery"]}>{item.status}</div>
//         ) : (
//           ""
//         )}
//         {item.status === "New Order" ? (
//           <div className={styles["newOrder"]}>{item.status}</div>
//         ) : (
//           ""
//         )}
//         {item.status === "Delivered" ? (
//           <div className={styles["delivered"]}>{item.status}</div>
//         ) : (
//           ""
//         )}
//       </td>
//     </tr>
//   );
// }
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Table.js
import React from "react";
import { useRouter } from "next/router";
import styles from "@/styles/order.module.css";
import { orderListData } from "@/data"; // Assuming the order data is stored here
import Paper from "@mui/material/Paper";
import Table from "@mui/material/Table";
import TableBody from "@mui/material/TableBody";
import TableCell from "@mui/material/TableCell";
import TableContainer from "@mui/material/TableContainer";
import TableHead from "@mui/material/TableHead";
import TablePagination from "@mui/material/TablePagination";
import TableRow from "@mui/material/TableRow";
const columns = [
  { id: "userId", label: "Order ID", minWidth: 170 },
  { id: "date", label: "Date", minWidth: 170, align: "left" },
  { id: "userName", label: "Customer Name", minWidth: 170, align: "left" },
  { id: "location", label: "Location", minWidth: 170, align: "left" },
  { id: "amount", label: "Amount", minWidth: 170, align: "right" },
  { id: "status", label: "Status Order", minWidth: 170, align: "center" },
];

const rows = orderListData; // Ensure that orderListData is correctly imported

export default function OrderTable() {
  const [page, setPage] = React.useState(0);
  const [rowsPerPage, setRowsPerPage] = React.useState(12);
  const router = useRouter();

  const handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

  const handleChangeRowsPerPage = (event) => {
    setRowsPerPage(+event.target.value);
    setPage(0);
  };

  const goToDetails = (id) => {
    router.push(`/orders/${id}`);
  };

  return (
    <Paper sx={{ width: "100%", overflow: "hidden" }}>
      <TableContainer sx={{ maxHeight: { xs: "auto", md: "auto" } }}>
        <Table stickyHeader aria-label="sticky table">
          <TableHead>
            <TableRow style={{ backgroundColor: "#00b074" }}>
              {columns.map((column) => (
                <TableCell
                  key={column.id}
                  align={column.align}
                  style={{
                    minWidth: column.minWidth,
                    backgroundColor: "#00b074",
                    color: "white",
                  }}
                >
                  {column.label}
                </TableCell>
              ))}
            </TableRow>
          </TableHead>
          <TableBody>
            {rows
              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
              .map((row) => (
                <TableRow
                  hover
                  role="checkbox"
                  tabIndex={-1}
                  key={row.id}
                  onClick={() => goToDetails(row.id)}
                  style={{ cursor: "pointer" }}
                >
                  {columns.map((column) => {
                    let value;
                    if (column.id === "amount") {
                      value = `$${row[column.id]}`;
                    } else if (column.id === "id") {
                      value = `#${row[column.id]}`;
                    } else {
                      value = row[column.id];
                    }

                    return (
                      <TableCell
                        key={column.id}
                        align={column.align}
                        className={
                          column.id === "amount" ? styles["amount"] : ""
                        }
                      >
                        {column.id === "status" ? (
                          <div className={styles["status"]}>
                            {row.status === "On Delivery" && (
                              <div className={styles["onDelivery"]}>
                                {row.status}
                              </div>
                            )}
                            {row.status === "New Order" && (
                              <div className={styles["newOrder"]}>
                                {row.status}
                              </div>
                            )}
                            {row.status === "Delivered" && (
                              <div className={styles["delivered"]}>
                                {row.status}
                              </div>
                            )}
                          </div>
                        ) : (
                          value
                        )}
                      </TableCell>
                    );
                  })}
                </TableRow>
              ))}
          </TableBody>
        </Table>
      </TableContainer>
      <TablePagination
        rowsPerPageOptions={[12, 25, 100]}
        component="div"
        count={rows.length}
        rowsPerPage={rowsPerPage}
        page={page}
        onPageChange={handleChangePage}
        onRowsPerPageChange={handleChangeRowsPerPage}
        sx={{ marginBottom: "40px" }}
      />
    </Paper>
  );
}
